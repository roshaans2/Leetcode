You're given a sorted array 'a' of 'n' integers and an integer 'x'.



Find the floor and ceiling of 'x' in 'a[0..n-1]'.



Note:
Floor of 'x' is the largest element in the array which is smaller than or equal to 'x'.
Ceiling of 'x' is the smallest element in the array greater than or equal to 'x'.


Example:
Input: 
n=6, x=5, a=[3, 4, 7, 8, 8, 10]   

Output:
4

Explanation:
The floor and ceiling of 'x' = 5 are 4 and 7, respectively.

int getCeil(vector<int>&a,int n,int x){
	int low = 0;
	int high = n-1;
	int mid = 0;
	int ans = -1;
	while(low<=high){
		mid = low+(high-low)/2;
		if(a[mid]>=x){
			ans = a[mid];
			high = mid-1;
		}
		else{
			low = mid+1;
		}
	}
	return ans;
}

int getFloor(vector<int>&a,int n,int x){
	int low = 0;
	int high = n-1;
	int mid = 0;
	int ans = -1;
	while(low<=high){
		mid = low+(high-low)/2;
		if(a[mid]<=x){
			ans = a[mid];
			low = mid+1;
		}
		else{
			high = mid-1;
		}
	}
	return ans;
}


pair<int, int> getFloorAndCeil(vector<int> &a, int n, int x) {
	int ceil = getCeil(a,n,x);
	int floor  = getFloor(a,n,x);
	return {floor,ceil};
}